{"ast":null,"code":"import api from './api';\n\n// Get all blogs with optional search and filtering\nexport const getBlogs = async (searchParams = {}) => {\n  const {\n    search,\n    sortBy,\n    author,\n    tag\n  } = searchParams;\n\n  // Build query string\n  let queryString = '';\n  if (search) queryString += `search=${encodeURIComponent(search)}&`;\n  if (sortBy) queryString += `sortBy=${sortBy}&`;\n  if (author) queryString += `author=${author}&`;\n  if (tag) queryString += `tag=${encodeURIComponent(tag)}&`;\n\n  // Remove trailing '&' if exists\n  if (queryString.endsWith('&')) {\n    queryString = queryString.slice(0, -1);\n  }\n  const url = queryString ? `/blogs?${queryString}` : '/blogs';\n  const response = await api.get(url);\n  return response.data;\n};\n\n// Get blog by ID\nexport const getBlogById = async id => {\n  const response = await api.get(`/blogs/${id}`);\n  return response.data;\n};\n\n// Create blog\nexport const createBlog = async blogData => {\n  const formData = new FormData();\n  formData.append('title', blogData.title);\n  formData.append('content', blogData.content);\n\n  // Add tags if they exist\n  if (blogData.tags) {\n    if (Array.isArray(blogData.tags)) {\n      formData.append('tags', blogData.tags.join(','));\n    } else {\n      formData.append('tags', blogData.tags);\n    }\n  }\n  if (blogData.image) {\n    formData.append('image', blogData.image);\n  }\n  const response = await api.post('/blogs', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\n\n// Update blog\nexport const updateBlog = async (id, blogData) => {\n  const formData = new FormData();\n  formData.append('title', blogData.title);\n  formData.append('content', blogData.content);\n\n  // Add tags if they exist\n  if (blogData.tags) {\n    if (Array.isArray(blogData.tags)) {\n      formData.append('tags', blogData.tags.join(','));\n    } else {\n      formData.append('tags', blogData.tags);\n    }\n  }\n  if (blogData.image) {\n    formData.append('image', blogData.image);\n  }\n  const response = await api.put(`/blogs/${id}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\n\n// Delete blog\nexport const deleteBlog = async id => {\n  const response = await api.delete(`/blogs/${id}`);\n  return response.data;\n};\n\n// Get user blogs\nexport const getUserBlogs = async () => {\n  const response = await api.get('/blogs/user/blogs');\n  return response.data;\n};\n\n// Get all tags\nexport const getAllTags = async () => {\n  const response = await api.get('/blogs/tags');\n  return response.data;\n};","map":{"version":3,"names":["api","getBlogs","searchParams","search","sortBy","author","tag","queryString","encodeURIComponent","endsWith","slice","url","response","get","data","getBlogById","id","createBlog","blogData","formData","FormData","append","title","content","tags","Array","isArray","join","image","post","headers","updateBlog","put","deleteBlog","delete","getUserBlogs","getAllTags"],"sources":["D:/Cursor/blog-app/client/src/services/blogService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Get all blogs with optional search and filtering\r\nexport const getBlogs = async (searchParams = {}) => {\r\n  const { search, sortBy, author, tag } = searchParams;\r\n  \r\n  // Build query string\r\n  let queryString = '';\r\n  if (search) queryString += `search=${encodeURIComponent(search)}&`;\r\n  if (sortBy) queryString += `sortBy=${sortBy}&`;\r\n  if (author) queryString += `author=${author}&`;\r\n  if (tag) queryString += `tag=${encodeURIComponent(tag)}&`;\r\n  \r\n  // Remove trailing '&' if exists\r\n  if (queryString.endsWith('&')) {\r\n    queryString = queryString.slice(0, -1);\r\n  }\r\n  \r\n  const url = queryString ? `/blogs?${queryString}` : '/blogs';\r\n  const response = await api.get(url);\r\n  return response.data;\r\n};\r\n\r\n// Get blog by ID\r\nexport const getBlogById = async (id) => {\r\n  const response = await api.get(`/blogs/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Create blog\r\nexport const createBlog = async (blogData) => {\r\n  const formData = new FormData();\r\n  formData.append('title', blogData.title);\r\n  formData.append('content', blogData.content);\r\n  \r\n  // Add tags if they exist\r\n  if (blogData.tags) {\r\n    if (Array.isArray(blogData.tags)) {\r\n      formData.append('tags', blogData.tags.join(','));\r\n    } else {\r\n      formData.append('tags', blogData.tags);\r\n    }\r\n  }\r\n  \r\n  if (blogData.image) {\r\n    formData.append('image', blogData.image);\r\n  }\r\n  \r\n  const response = await api.post('/blogs', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Update blog\r\nexport const updateBlog = async (id, blogData) => {\r\n  const formData = new FormData();\r\n  formData.append('title', blogData.title);\r\n  formData.append('content', blogData.content);\r\n  \r\n  // Add tags if they exist\r\n  if (blogData.tags) {\r\n    if (Array.isArray(blogData.tags)) {\r\n      formData.append('tags', blogData.tags.join(','));\r\n    } else {\r\n      formData.append('tags', blogData.tags);\r\n    }\r\n  }\r\n  \r\n  if (blogData.image) {\r\n    formData.append('image', blogData.image);\r\n  }\r\n  \r\n  const response = await api.put(`/blogs/${id}`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Delete blog\r\nexport const deleteBlog = async (id) => {\r\n  const response = await api.delete(`/blogs/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Get user blogs\r\nexport const getUserBlogs = async () => {\r\n  const response = await api.get('/blogs/user/blogs');\r\n  return response.data;\r\n};\r\n\r\n// Get all tags\r\nexport const getAllTags = async () => {\r\n  const response = await api.get('/blogs/tags');\r\n  return response.data;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}