{"ast":null,"code":"import api from './api';\n\n// Get all blogs with search and filtering\nexport const getBlogs = async (params = {}) => {\n  const {\n    search,\n    author,\n    sortBy,\n    order\n  } = params;\n  let queryString = '';\n  if (search) queryString += `search=${encodeURIComponent(search)}&`;\n  if (author) queryString += `author=${encodeURIComponent(author)}&`;\n  if (sortBy) queryString += `sortBy=${encodeURIComponent(sortBy)}&`;\n  if (order) queryString += `order=${encodeURIComponent(order)}&`;\n\n  // Remove trailing & if exists\n  queryString = queryString ? `?${queryString.slice(0, -1)}` : '';\n  const response = await api.get(`/blogs${queryString}`);\n  return response.data;\n};\n\n// Get blog by ID\nexport const getBlogById = async id => {\n  const response = await api.get(`/blogs/${id}`);\n  return response.data;\n};\n\n// Create blog\nexport const createBlog = async blogData => {\n  const formData = new FormData();\n  formData.append('title', blogData.title);\n  formData.append('content', blogData.content);\n  if (blogData.image) {\n    formData.append('image', blogData.image);\n  }\n  const response = await api.post('/blogs', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\n\n// Update blog\nexport const updateBlog = async (id, blogData) => {\n  const formData = new FormData();\n  formData.append('title', blogData.title);\n  formData.append('content', blogData.content);\n  if (blogData.image) {\n    formData.append('image', blogData.image);\n  }\n  const response = await api.put(`/blogs/${id}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\n\n// Delete blog\nexport const deleteBlog = async id => {\n  const response = await api.delete(`/blogs/${id}`);\n  return response.data;\n};\n\n// Get user blogs\nexport const getUserBlogs = async () => {\n  const response = await api.get('/blogs/user/blogs');\n  return response.data;\n};","map":{"version":3,"names":["api","getBlogs","params","search","author","sortBy","order","queryString","encodeURIComponent","slice","response","get","data","getBlogById","id","createBlog","blogData","formData","FormData","append","title","content","image","post","headers","updateBlog","put","deleteBlog","delete","getUserBlogs"],"sources":["D:/Cursor/blog-app/client/src/services/blogService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Get all blogs with search and filtering\r\nexport const getBlogs = async (params = {}) => {\r\n  const { search, author, sortBy, order } = params;\r\n  let queryString = '';\r\n  \r\n  if (search) queryString += `search=${encodeURIComponent(search)}&`;\r\n  if (author) queryString += `author=${encodeURIComponent(author)}&`;\r\n  if (sortBy) queryString += `sortBy=${encodeURIComponent(sortBy)}&`;\r\n  if (order) queryString += `order=${encodeURIComponent(order)}&`;\r\n  \r\n  // Remove trailing & if exists\r\n  queryString = queryString ? `?${queryString.slice(0, -1)}` : '';\r\n  \r\n  const response = await api.get(`/blogs${queryString}`);\r\n  return response.data;\r\n};\r\n\r\n// Get blog by ID\r\nexport const getBlogById = async (id) => {\r\n  const response = await api.get(`/blogs/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Create blog\r\nexport const createBlog = async (blogData) => {\r\n  const formData = new FormData();\r\n  formData.append('title', blogData.title);\r\n  formData.append('content', blogData.content);\r\n  \r\n  if (blogData.image) {\r\n    formData.append('image', blogData.image);\r\n  }\r\n  \r\n  const response = await api.post('/blogs', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Update blog\r\nexport const updateBlog = async (id, blogData) => {\r\n  const formData = new FormData();\r\n  formData.append('title', blogData.title);\r\n  formData.append('content', blogData.content);\r\n  \r\n  if (blogData.image) {\r\n    formData.append('image', blogData.image);\r\n  }\r\n  \r\n  const response = await api.put(`/blogs/${id}`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Delete blog\r\nexport const deleteBlog = async (id) => {\r\n  const response = await api.delete(`/blogs/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Get user blogs\r\nexport const getUserBlogs = async () => {\r\n  const response = await api.get('/blogs/user/blogs');\r\n  return response.data;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}